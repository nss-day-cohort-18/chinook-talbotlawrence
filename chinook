--Provide a query showing Customers (just their full names, customer ID and country) 
--who are not in the US.
select * from Customer limit 100;
select firstname || " " || lastname as full_name, customerid, country
from Customer
where country != 'USA' ;

--Provide a query only showing the Customers from Brazil.
select firstname || " " || lastname as full_name, customerid, country
from Customer
where country = 'Brazil' ;

--Provide a query showing the Invoices of customers who are from Brazil. 
--The resultant table should show the customer's full name, Invoice ID, Date of the invoice and billing country.
select cus.firstname || " " || cus.lastname as full_name, inv.invoiceid, inv.invoicedate, inv.billingcountry
from Customer cus join Invoice inv on cus.customerid = inv.customerid
where inv.billingcountry = 'Brazil';

--Provide a query showing only the Employees who are Sales Agents.
select * from Employee limit 100;
select firstname || " " || lastname as full_name, title
from Employee
--where title like '%Agent%';
where title = 'Sales Support Agent';

--Provide a query showing a unique/distinct list of billing countries from the Invoice table.
select distinct(billingcountry)
from invoice order by billingcountry;

--Provide a query that shows the invoices associated with each sales agent. 
--The resultant table should include the Sales Agent's full name.
--select * from Customer limit 100;
--THIS MAY BE WRONG!!  I'm not sure about the join between the customer table and the employee table
select emp.firstname || " " || emp.lastname as full_name
from Employee emp join Customer cus on emp.employeeid = cus.supportrepid join Invoice inv on cus.customerid = inv.customerid
where emp.title = 'Sales Support Agent';

--Provide a query that shows the Invoice Total, Customer name, Country and Sale Agent name for all invoices and customers.
--select * from Invoice limit 100;
select "$" || inv.[total] as total_price, cus.firstname || " " || cus.lastname as customer_name, 
	cus.country, emp.firstname || " " || emp.lastname as employee_name
from Employee emp join Customer cus on emp.employeeid = cus.supportrepid join Invoice inv on cus.customerid = inv.customerid

--How many Invoices were there in 2009 and 2011?
--select substr(invoicedate, 0, 5) from invoice limit 100;
--select invoicedate from Invoice where substr(invoicedate, 0, 5) in ('2009', '2011');
select count(invoiceid) from Invoice where substr(invoicedate, 0, 5) in ('2009', '2011');

--What are the respective total sales for each of those years?
select "$" || substr(sum([total]), 0, 7) as total_sales from Invoice where substr(invoicedate, 0, 5) in ('2009', '2011');

--Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for Invoice ID 37.
--select * from invoiceline where invoiceid = 37;
select count(invoiceid) from InvoiceLine where invoiceid = 37;

--Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for each Invoice. 
--HINT: GROUP BY
--select * from invoiceline order by invoiceid limit 100;
select count(invoicelineid) from InvoiceLine group by invoiceid;

--Provide a query that includes the purchased track name with each invoice line item.
select tra.name, inl.invoicelineid
from track tra join invoiceline inl on tra.trackid = inl.trackid
order by tra.name; 

--Provide a query that includes the purchased track name AND artist name with each invoice line item.
select art.name as artist_name, tra.name as track_name, inl.invoicelineid
from track tra join invoiceline inl on tra.trackid = inl.trackid
	join album alb on tra.albumid = alb.albumid
	join artist art on alb.artistid = art.artistid
order by art.name, tra.name; 

--Provide a query that shows the # of invoices per country. HINT: GROUP BY
--select * from invoice order by billingcountry;
select count(invoiceid), billingcountry from invoice group by billingcountry order by count(invoiceid);

--Provide a query that shows the total number of tracks in each playlist. 
--The Playlist name should be include on the resulant table.
select count(plt.trackid) as number_of_tracks, pl.name as playlist_name
from Playlist pl join PlaylistTrack plt on pl.playlistid = plt.playlistid
group by pl.name; 

--Provide a query that shows all the Tracks, but displays no IDs. 
--The result should include the Album name, Media type and Genre.
select alb.title as album_name, met.name as media_type, gen.name as genre_name
from Album alb join Track tra on alb.albumid = tra.albumid
	join MediaType met on tra.mediatypeid = tra.mediatypeid
	join Genre gen on tra.genreid = gen.genreid;
	
--Provide a query that shows all Invoices but includes the # of invoice line items.
select inl.invoicelineid, inv.invoicedate, inv.[total]
from Invoice inv join InvoiceLine inl on inv.invoiceid = inl.invoiceid; 